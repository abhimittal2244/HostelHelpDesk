// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using HostelHelpDesk.Persistence.Data;

#nullable disable

namespace HostelHelpDesk.Migrations
{
    [DbContext(typeof(HostelComplaintsDB))]
    partial class HostelComplaintsDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("HostelHelpDesk.Domain.Models.Complaint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CaretakerId")
                        .HasColumnType("int");

                    b.Property<string>("ComplaintNo")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ComplaintTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Completed")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("HostelId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("TimeslotId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CaretakerId");

                    b.HasIndex("ComplaintNo")
                        .IsUnique();

                    b.HasIndex("ComplaintTypeId");

                    b.HasIndex("HostelId");

                    b.HasIndex("RoomId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TimeslotId");

                    b.HasIndex("WorkerId");

                    b.ToTable("Complaints");
                });

            modelBuilder.Entity("HostelHelpDesk.Domain.Models.ComplaintType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ComplaintTypes");
                });

            modelBuilder.Entity("HostelHelpDesk.Domain.Models.Hostel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HostelName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("HostelName")
                        .IsUnique();

                    b.ToTable("Hostels");
                });

            modelBuilder.Entity("HostelHelpDesk.Domain.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HostelId")
                        .HasColumnType("int");

                    b.Property<string>("RoomNo")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("HostelId", "RoomNo")
                        .IsUnique();

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("HostelHelpDesk.Domain.Models.Timeslot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time(6)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time(6)");

                    b.HasKey("Id");

                    b.ToTable("Timeslots");
                });

            modelBuilder.Entity("HostelHelpDesk.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("HostelHelpDesk.Domain.Models.WorkerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComplaintTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplaintTypeId");

                    b.HasIndex("WorkerId");

                    b.ToTable("WorkerTypes");
                });

            modelBuilder.Entity("HostelHelpDesk.Domain.Models.Admin", b =>
                {
                    b.HasBaseType("HostelHelpDesk.Domain.Models.User");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("HostelHelpDesk.Domain.Models.Caretaker", b =>
                {
                    b.HasBaseType("HostelHelpDesk.Domain.Models.User");

                    b.Property<int>("HostelId")
                        .HasColumnType("int");

                    b.HasIndex("HostelId");

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("User", t =>
                        {
                            t.Property("HostelId")
                                .HasColumnName("Caretaker_HostelId");
                        });

                    b.HasDiscriminator().HasValue("Caretaker");
                });

            modelBuilder.Entity("HostelHelpDesk.Domain.Models.Student", b =>
                {
                    b.HasBaseType("HostelHelpDesk.Domain.Models.User");

                    b.Property<int>("HostelId")
                        .HasColumnType("int");

                    b.Property<int>("RollNo")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasIndex("HostelId");

                    b.HasIndex("RollNo")
                        .IsUnique();

                    b.HasIndex("RoomId");

                    b.HasDiscriminator().HasValue("Student");
                });

            modelBuilder.Entity("HostelHelpDesk.Domain.Models.Worker", b =>
                {
                    b.HasBaseType("HostelHelpDesk.Domain.Models.User");

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("Worker");
                });

            modelBuilder.Entity("HostelHelpDesk.Domain.Models.Complaint", b =>
                {
                    b.HasOne("HostelHelpDesk.Domain.Models.Caretaker", "Caretaker")
                        .WithMany()
                        .HasForeignKey("CaretakerId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("HostelHelpDesk.Domain.Models.ComplaintType", "ComplaintType")
                        .WithMany()
                        .HasForeignKey("ComplaintTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HostelHelpDesk.Domain.Models.Hostel", "Hostel")
                        .WithMany()
                        .HasForeignKey("HostelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HostelHelpDesk.Domain.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HostelHelpDesk.Domain.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();

                    b.HasOne("HostelHelpDesk.Domain.Models.Timeslot", "Timeslot")
                        .WithMany()
                        .HasForeignKey("TimeslotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HostelHelpDesk.Domain.Models.Worker", "Worker")
                        .WithMany()
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.ClientNoAction);

                    b.Navigation("Caretaker");

                    b.Navigation("ComplaintType");

                    b.Navigation("Hostel");

                    b.Navigation("Room");

                    b.Navigation("Student");

                    b.Navigation("Timeslot");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("HostelHelpDesk.Domain.Models.Room", b =>
                {
                    b.HasOne("HostelHelpDesk.Domain.Models.Hostel", "Hostel")
                        .WithMany()
                        .HasForeignKey("HostelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Hostel");
                });

            modelBuilder.Entity("HostelHelpDesk.Domain.Models.WorkerType", b =>
                {
                    b.HasOne("HostelHelpDesk.Domain.Models.ComplaintType", "ComplaintType")
                        .WithMany()
                        .HasForeignKey("ComplaintTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HostelHelpDesk.Domain.Models.Worker", null)
                        .WithMany("WorkerSpecialization")
                        .HasForeignKey("WorkerId");

                    b.Navigation("ComplaintType");
                });

            modelBuilder.Entity("HostelHelpDesk.Domain.Models.Caretaker", b =>
                {
                    b.HasOne("HostelHelpDesk.Domain.Models.Hostel", "Hostel")
                        .WithMany()
                        .HasForeignKey("HostelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hostel");
                });

            modelBuilder.Entity("HostelHelpDesk.Domain.Models.Student", b =>
                {
                    b.HasOne("HostelHelpDesk.Domain.Models.Hostel", "Hostel")
                        .WithMany()
                        .HasForeignKey("HostelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HostelHelpDesk.Domain.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hostel");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HostelHelpDesk.Domain.Models.Worker", b =>
                {
                    b.Navigation("WorkerSpecialization");
                });
#pragma warning restore 612, 618
        }
    }
}
